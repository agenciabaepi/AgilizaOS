import { NextRequest, NextResponse } from 'next/server'
import nodemailer from 'nodemailer'

export async function POST(request: NextRequest) {
  try {
    const { email } = await request.json()

    if (!email) {
      return NextResponse.json(
        { error: 'Email √© obrigat√≥rio' },
        { status: 400 }
      )
    }

    console.log('üîç Debug - Testando autentica√ß√£o SMTP para:', email)

    // Criar transporter
    const transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST || 'smtp.hostinger.com',
      port: parseInt(process.env.SMTP_PORT || '465'),
      secure: process.env.SMTP_SECURE === 'true' || true,
      auth: {
        user: process.env.SMTP_USER || 'suporte@gestaoconsert.com.br',
        pass: process.env.SMTP_PASS
      }
    })

    console.log('üîç Debug - Configura√ß√µes SMTP:', {
      host: process.env.SMTP_HOST || 'smtp.hostinger.com',
      port: process.env.SMTP_PORT || '465',
      secure: process.env.SMTP_SECURE === 'true' || true,
      user: process.env.SMTP_USER || 'suporte@gestaoconsert.com.br',
      pass: process.env.SMTP_PASS ? '***CONFIGURADO***' : '***N√ÉO CONFIGURADO***'
    })

    // Testar verifica√ß√£o
    console.log('üîç Debug - Testando verifica√ß√£o SMTP...')
    await transporter.verify()
    console.log('‚úÖ Verifica√ß√£o SMTP bem-sucedida')

    // Testar envio simples
    console.log('üîç Debug - Testando envio de email...')
    const info = await transporter.sendMail({
      from: '"Teste" <suporte@gestaoconsert.com.br>',
      to: email,
      subject: 'Teste de Configura√ß√£o SMTP',
      text: 'Este √© um teste de configura√ß√£o SMTP.',
      html: '<p>Este √© um teste de configura√ß√£o SMTP.</p>'
    })

    console.log('‚úÖ Email de teste enviado:', info.messageId)

    return NextResponse.json({
      success: true,
      message: 'Teste de autentica√ß√£o SMTP bem-sucedido',
      messageId: info.messageId
    })

  } catch (error) {
    console.error('‚ùå Erro no teste de autentica√ß√£o SMTP:', error)
    return NextResponse.json({
      success: false,
      error: 'Falha na autentica√ß√£o SMTP',
      details: error instanceof Error ? error.message : 'Erro desconhecido'
    }, { status: 500 })
  }
}
