-- =====================================================
-- CORRE√á√ÉO RLS SMART - EQUIPAMENTOS_TIPOS
-- =====================================================
-- Este script habilita RLS com pol√≠tica inteligente para equipamentos_tipos
-- Permite leitura para todos (incluindo APIs com chave an√¥nima)
-- Restringe escrita apenas para usu√°rios autenticados

-- 1. HABILITAR RLS NA TABELA
-- =====================================================
ALTER TABLE public.equipamentos_tipos ENABLE ROW LEVEL SECURITY;

-- 2. CRIAR POL√çTICAS SMART
-- =====================================================

-- Pol√≠tica para SELECT - Permitir que TODOS (an√¥nimos e autenticados) leiam tipos de equipamentos
-- Isso √© necess√°rio porque a API de leitura pode estar usando a chave anon
CREATE POLICY "Allow all read access to equipamentos_tipos"
    ON public.equipamentos_tipos FOR SELECT
    TO public -- Permite acesso para todos, incluindo an√¥nimos
    USING (true);

-- Pol√≠tica para INSERT - Apenas usu√°rios autenticados podem inserir
CREATE POLICY "Allow authenticated insert to equipamentos_tipos"
    ON public.equipamentos_tipos FOR INSERT
    TO authenticated
    WITH CHECK (auth.role() = 'authenticated');

-- Pol√≠tica para UPDATE - Apenas usu√°rios autenticados podem atualizar
CREATE POLICY "Allow authenticated update to equipamentos_tipos"
    ON public.equipamentos_tipos FOR UPDATE
    TO authenticated
    USING (auth.role() = 'authenticated');

-- Pol√≠tica para DELETE - Apenas usu√°rios autenticados podem deletar
CREATE POLICY "Allow authenticated delete to equipamentos_tipos"
    ON public.equipamentos_tipos FOR DELETE
    TO authenticated
    USING (auth.role() = 'authenticated');

-- 3. VERIFICAR SE RLS EST√Å FUNCIONANDO
-- =====================================================
-- Execute estas queries para testar:

-- Verificar se RLS est√° habilitado:
-- SELECT schemaname, tablename, rowsecurity FROM pg_tables WHERE tablename = 'equipamentos_tipos';

-- Testar acesso de leitura (deve funcionar mesmo sem estar logado):
-- SELECT COUNT(*) FROM public.equipamentos_tipos;

-- Ver tipos de equipamentos dispon√≠veis:
-- SELECT id, nome, descricao FROM public.equipamentos_tipos ORDER BY nome;

-- 4. TESTAR A APLICA√á√ÉO
-- =====================================================
-- Ap√≥s executar este script:
-- 1. Teste se a listagem de equipamentos funciona
-- 2. Verifique se consegue criar/editar tipos de equipamentos
-- 3. Confirme que os dropdowns de tipos funcionam
-- 4. Teste se o cadastro de equipamentos ainda funciona
-- 5. Se tudo funcionar, podemos prosseguir para a pr√≥xima tabela

-- 5. ROLLBACK (SE NECESS√ÅRIO)
-- =====================================================
-- Se algo quebrar, execute para reverter:
-- ALTER TABLE public.equipamentos_tipos DISABLE ROW LEVEL SECURITY;
-- DROP POLICY IF EXISTS "Allow all read access to equipamentos_tipos" ON public.equipamentos_tipos;
-- DROP POLICY IF EXISTS "Allow authenticated insert to equipamentos_tipos" ON public.equipamentos_tipos;
-- DROP POLICY IF EXISTS "Allow authenticated update to equipamentos_tipos" ON public.equipamentos_tipos;
-- DROP POLICY IF EXISTS "Allow authenticated delete to equipamentos_tipos" ON public.equipamentos_tipos;

-- =====================================================
-- STATUS DAS CORRE√á√ïES:
-- ‚úÖ catalogo_categorias - CORRIGIDA
-- ‚úÖ catalogo_itens - CORRIGIDA
-- ‚úÖ categorias_produtos - CORRIGIDA
-- ‚úÖ checklist_itens - CORRIGIDA (com pol√≠tica smart)
-- ‚úÖ configuracoes_comissao - CORRIGIDA
-- ‚úÖ configuracoes_empresa - CORRIGIDA
-- üîÑ equipamentos_tipos - TESTANDO POL√çTICA SMART
-- ‚è≥ grupos_produtos - PENDENTE
-- ‚è≥ notificacoes - PENDENTE
-- ‚è≥ ordens_servico - PENDENTE
-- ‚è≥ pagamentos - PENDENTE
-- =====================================================

