-- =====================================================
-- DIAGN√ìSTICO DO PROBLEMA DE LOGIN
-- =====================================================

-- =====================================================
-- 1. VERIFICAR USU√ÅRIOS EXISTENTES
-- =====================================================

-- Buscar todos os usu√°rios na tabela usuarios
SELECT 
    id,
    nome,
    email,
    auth_user_id,
    empresa_id,
    nivel,
    created_at
FROM public.usuarios 
ORDER BY created_at DESC;

-- =====================================================
-- 2. VERIFICAR SE H√Å USU√ÅRIO COM NOME "wdglp"
-- =====================================================

-- Buscar especificamente por "wdglp"
SELECT 
    id,
    nome,
    email,
    auth_user_id,
    empresa_id,
    nivel
FROM public.usuarios 
WHERE nome ILIKE '%wdglp%' 
   OR email ILIKE '%wdglp%'
   OR auth_user_id::text ILIKE '%wdglp%';

-- =====================================================
-- 3. VERIFICAR RLS E POL√çTICAS
-- =====================================================

-- Verificar status RLS
SELECT 
    tablename,
    rowsecurity as rls_enabled,
    CASE 
        WHEN rowsecurity THEN '‚úÖ RLS ATIVO'
        ELSE '‚ùå RLS DESABILITADO'
    END as status_rls
FROM pg_tables 
WHERE schemaname = 'public'
AND tablename = 'usuarios';

-- Verificar pol√≠ticas na tabela usuarios
SELECT 
    policyname,
    cmd as operation,
    roles,
    qual as condition,
    with_check as check_condition
FROM pg_policies 
WHERE schemaname = 'public'
AND tablename = 'usuarios';

-- =====================================================
-- 4. TESTAR SELECT DIRETO NA TABELA USUARIOS
-- =====================================================

-- Teste 1: Como usu√°rio autenticado
SELECT 
    COUNT(*) as total_usuarios_autenticado
FROM public.usuarios;

-- Teste 2: Como service_role
SET ROLE service_role;
SELECT 
    COUNT(*) as total_usuarios_service_role
FROM public.usuarios;
RESET ROLE;

-- =====================================================
-- 5. VERIFICAR FUN√á√ïES DE AUTENTICA√á√ÉO
-- =====================================================

-- Testar se as fun√ß√µes auth funcionam
SELECT 
    auth.uid() as current_user_id,
    auth.role() as current_role;

-- =====================================================
-- 6. CRIAR USU√ÅRIO DE TESTE SE NECESS√ÅRIO
-- =====================================================

-- Verificar se precisamos criar um usu√°rio de teste
-- (S√≥ executar se n√£o houver usu√°rios)
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM public.usuarios LIMIT 1) THEN
        RAISE NOTICE '‚ùå Nenhum usu√°rio encontrado na tabela usuarios';
        RAISE NOTICE 'üí° Pode ser necess√°rio criar um usu√°rio de teste';
    ELSE
        RAISE NOTICE '‚úÖ Usu√°rios encontrados na tabela usuarios';
    END IF;
END $$;

-- =====================================================
-- STATUS DO DIAGN√ìSTICO:
-- ‚úÖ Usu√°rios existentes verificados
-- ‚úÖ Busca espec√≠fica por "wdglp" realizada
-- ‚úÖ RLS e pol√≠ticas verificadas
-- ‚úÖ Testes de SELECT realizados
-- ‚úÖ Fun√ß√µes de autentica√ß√£o testadas
-- ‚úÖ Verifica√ß√£o de necessidade de usu√°rio de teste
-- =====================================================





